defmodule CaseManager.Repo.Migrations.AddMissingRefsToCaseResources do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    drop constraint(:case_alert, "case_alert_alert_id_fkey")

    drop constraint(:case_alert, "case_alert_case_id_fkey")

    alter table(:case_alert) do
      modify :case_id,
             references(:case,
               column: :id,
               name: "case_alert_to_case_fkey",
               type: :uuid,
               prefix: "public",
               on_delete: :delete_all,
               on_update: :update_all
             )

      modify :alert_id,
             references(:alert,
               column: :id,
               name: "case_alert_to_alert_fkey",
               type: :uuid,
               prefix: "public",
               on_delete: :delete_all,
               on_update: :update_all
             )
    end
  end

  def down do
    drop constraint(:case_alert, "case_alert_to_case_fkey")

    drop constraint(:case_alert, "case_alert_to_alert_fkey")

    alter table(:case_alert) do
      modify :alert_id,
             references(:alert,
               column: :id,
               name: "case_alert_alert_id_fkey",
               type: :uuid,
               prefix: "public"
             )

      modify :case_id,
             references(:case,
               column: :id,
               name: "case_alert_case_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end
  end
end
