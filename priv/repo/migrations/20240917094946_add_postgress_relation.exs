defmodule CaseManager.Repo.Migrations.AddPostgressRelation do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    execute("""
    DO $$
    BEGIN
      IF EXISTS (SELECT 1 FROM pg_constraint WHERE conname = 'alerts_team_id_fkey') THEN
        ALTER TABLE alerts DROP CONSTRAINT alerts_team_id_fkey;
      END IF;
    END
    $$;
    """)

    alter table(:alerts) do
      modify :team_id,
             references(:teams,
               column: :id,
               name: "alerts_to_teams_fkey",
               type: :uuid,
               prefix: "public",
               on_delete: :delete_all,
               on_update: :update_all
             )
    end

    execute("ALTER TABLE alerts alter CONSTRAINT alerts_to_teams_fkey NOT DEFERRABLE")
  end

  def down do
    drop constraint(:alerts, "alerts_to_teams_fkey")

    alter table(:alerts) do
      modify :team_id,
             references(:teams,
               column: :id,
               name: "alerts_team_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end
  end
end
