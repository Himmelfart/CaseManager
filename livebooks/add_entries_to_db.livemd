<!-- livebook:{"app_settings":{"access_type":"public","output_type":"rich","slug":"Case-Manager"}} -->

# Case Manager: Data Base

```elixir
Mix.install([
  {:kino_db, git: "https://github.com/mikaelfangel/kino_db.git", ref: "main"},
  {:postgrex, ">= 0.0.0"},
  {:ecto, "~> 3.12"},
  {:httpoison, "~> 1.8"},
  {:jason, "~> 1.2"},
])
```

## DataBase Handling

```elixir
opts = [
  hostname: "localhost",
  port: 5432,
  username: "postgres",
  password: System.fetch_env!("LB_CASE_MANAGER_DV"),
  database: "case_manager_dev"
]

{:ok, conn} = Kino.start_child({Postgrex, opts})
```

```elixir
defmodule FormHandler do
  require Logger
  alias HTTPoison

  def handle_form_submission(params) do
    payload = %{
      data: %{
        attributes: params.data,
        type: "alert"
      }
    }

    json_payload = Jason.encode!(payload)
    IO.inspect(json_payload)

    headers = [
      {"accept", "application/vnd.api+json"},
      {"Content-Type", "application/vnd.api+json"}
    ]

    response = HTTPoison.post!(
      "http://localhost:4000/api/json/alerts",
      json_payload,
      headers
    )

    Logger.info("Response: #{inspect(response.body)}")
  end
end
```

```elixir
risk_levels = [{:info, "Info"}, {:low, "Low"}, {:medium, "Medium"}, {:high, "High"}, {:critical, "Critical"}]
teams = Postgrex.query!(conn, ~S"SELECT * FROM team", [])

form =
  Kino.Control.form(
    [
      title: Kino.Input.text("Title"),
      alert_id: Kino.Input.text("Alert ID", default: Ecto.UUID.generate() |> String.slice(0..7)),
      creation_time: Kino.Input.text("Creation Time", default: DateTime.utc_now() |> to_string() |> String.replace(" ", "T")),
      link: Kino.Input.text("Link"),
      risk_level: Kino.Input.select("Risk Level", risk_levels),
      team_id: Kino.Input.select("Team ID",  teams.rows |> Enum.map(fn [a | [b | _]] -> {Ecto.UUID.cast!(a), b} end))         
    ],
    submit: "Submit"
  )

Kino.listen(form, fn event ->
  FormHandler.handle_form_submission(event)
end)

form
```

```elixir
alerts = Postgrex.query!(conn, ~S"SELECT * FROM alert", [])
```

<!-- livebook:{"offset":2081,"stamp":{"token":"XCP.x3hSnREmnQ1qYEzmXildlPs2n9iooHmlSz_p4J_zMSYWa0LrcogzXhFSYZsy_-tH0hUjl4ymF1zx9Dh-uHQ3bElf8W-Szn2Afil1C3J8JdJKGfirfL0guLRh","version":2}} -->
